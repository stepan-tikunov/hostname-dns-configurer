// Code generated by go-swagger; DO NOT EDIT.

package dns_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/stepan-tikunov/hostname-dns-configurer/api/gen/go/swagger"
)

// DNSServiceCreateNameserverReader is a Reader for the DNSServiceCreateNameserver structure.
type DNSServiceCreateNameserverReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DNSServiceCreateNameserverReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDNSServiceCreateNameserverOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDNSServiceCreateNameserverDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDNSServiceCreateNameserverOK creates a DNSServiceCreateNameserverOK with default headers values
func NewDNSServiceCreateNameserverOK() *DNSServiceCreateNameserverOK {
	return &DNSServiceCreateNameserverOK{}
}

/*
DNSServiceCreateNameserverOK describes a response with status code 200, with default header values.

A successful response.
*/
type DNSServiceCreateNameserverOK struct {
	Payload *swagger.V1NameserverResponse
}

// IsSuccess returns true when this dns service create nameserver o k response has a 2xx status code
func (o *DNSServiceCreateNameserverOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dns service create nameserver o k response has a 3xx status code
func (o *DNSServiceCreateNameserverOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dns service create nameserver o k response has a 4xx status code
func (o *DNSServiceCreateNameserverOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this dns service create nameserver o k response has a 5xx status code
func (o *DNSServiceCreateNameserverOK) IsServerError() bool {
	return false
}

// IsCode returns true when this dns service create nameserver o k response a status code equal to that given
func (o *DNSServiceCreateNameserverOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the dns service create nameserver o k response
func (o *DNSServiceCreateNameserverOK) Code() int {
	return 200
}

func (o *DNSServiceCreateNameserverOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/dns][%d] dnsServiceCreateNameserverOK %s", 200, payload)
}

func (o *DNSServiceCreateNameserverOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/dns][%d] dnsServiceCreateNameserverOK %s", 200, payload)
}

func (o *DNSServiceCreateNameserverOK) GetPayload() *swagger.V1NameserverResponse {
	return o.Payload
}

func (o *DNSServiceCreateNameserverOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger.V1NameserverResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDNSServiceCreateNameserverDefault creates a DNSServiceCreateNameserverDefault with default headers values
func NewDNSServiceCreateNameserverDefault(code int) *DNSServiceCreateNameserverDefault {
	return &DNSServiceCreateNameserverDefault{
		_statusCode: code,
	}
}

/*
DNSServiceCreateNameserverDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DNSServiceCreateNameserverDefault struct {
	_statusCode int

	Payload *swagger.RPCStatus
}

// IsSuccess returns true when this Dns service create nameserver default response has a 2xx status code
func (o *DNSServiceCreateNameserverDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this Dns service create nameserver default response has a 3xx status code
func (o *DNSServiceCreateNameserverDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this Dns service create nameserver default response has a 4xx status code
func (o *DNSServiceCreateNameserverDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this Dns service create nameserver default response has a 5xx status code
func (o *DNSServiceCreateNameserverDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this Dns service create nameserver default response a status code equal to that given
func (o *DNSServiceCreateNameserverDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the Dns service create nameserver default response
func (o *DNSServiceCreateNameserverDefault) Code() int {
	return o._statusCode
}

func (o *DNSServiceCreateNameserverDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/dns][%d] DnsService_CreateNameserver default %s", o._statusCode, payload)
}

func (o *DNSServiceCreateNameserverDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/dns][%d] DnsService_CreateNameserver default %s", o._statusCode, payload)
}

func (o *DNSServiceCreateNameserverDefault) GetPayload() *swagger.RPCStatus {
	return o.Payload
}

func (o *DNSServiceCreateNameserverDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(swagger.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
