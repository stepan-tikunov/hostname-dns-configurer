// Code generated by go-swagger; DO NOT EDIT.

package hostname_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	v1 "github.com/stepan-tikunov/hostname-dns-configurer/api/gen/go/http/v1"
)

// HostnameServiceGetHostnameReader is a Reader for the HostnameServiceGetHostname structure.
type HostnameServiceGetHostnameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HostnameServiceGetHostnameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHostnameServiceGetHostnameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewHostnameServiceGetHostnameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHostnameServiceGetHostnameOK creates a HostnameServiceGetHostnameOK with default headers values
func NewHostnameServiceGetHostnameOK() *HostnameServiceGetHostnameOK {
	return &HostnameServiceGetHostnameOK{}
}

/*
HostnameServiceGetHostnameOK describes a response with status code 200, with default header values.

A successful response.
*/
type HostnameServiceGetHostnameOK struct {
	Payload *v1.V1HostnameMessage
}

// IsSuccess returns true when this hostname service get hostname o k response has a 2xx status code
func (o *HostnameServiceGetHostnameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this hostname service get hostname o k response has a 3xx status code
func (o *HostnameServiceGetHostnameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hostname service get hostname o k response has a 4xx status code
func (o *HostnameServiceGetHostnameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this hostname service get hostname o k response has a 5xx status code
func (o *HostnameServiceGetHostnameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this hostname service get hostname o k response a status code equal to that given
func (o *HostnameServiceGetHostnameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the hostname service get hostname o k response
func (o *HostnameServiceGetHostnameOK) Code() int {
	return 200
}

func (o *HostnameServiceGetHostnameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/hostname][%d] hostnameServiceGetHostnameOK %s", 200, payload)
}

func (o *HostnameServiceGetHostnameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/hostname][%d] hostnameServiceGetHostnameOK %s", 200, payload)
}

func (o *HostnameServiceGetHostnameOK) GetPayload() *v1.V1HostnameMessage {
	return o.Payload
}

func (o *HostnameServiceGetHostnameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.V1HostnameMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHostnameServiceGetHostnameDefault creates a HostnameServiceGetHostnameDefault with default headers values
func NewHostnameServiceGetHostnameDefault(code int) *HostnameServiceGetHostnameDefault {
	return &HostnameServiceGetHostnameDefault{
		_statusCode: code,
	}
}

/*
HostnameServiceGetHostnameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type HostnameServiceGetHostnameDefault struct {
	_statusCode int

	Payload *v1.RPCStatus
}

// IsSuccess returns true when this hostname service get hostname default response has a 2xx status code
func (o *HostnameServiceGetHostnameDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this hostname service get hostname default response has a 3xx status code
func (o *HostnameServiceGetHostnameDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this hostname service get hostname default response has a 4xx status code
func (o *HostnameServiceGetHostnameDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this hostname service get hostname default response has a 5xx status code
func (o *HostnameServiceGetHostnameDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this hostname service get hostname default response a status code equal to that given
func (o *HostnameServiceGetHostnameDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the hostname service get hostname default response
func (o *HostnameServiceGetHostnameDefault) Code() int {
	return o._statusCode
}

func (o *HostnameServiceGetHostnameDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/hostname][%d] HostnameService_GetHostname default %s", o._statusCode, payload)
}

func (o *HostnameServiceGetHostnameDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/hostname][%d] HostnameService_GetHostname default %s", o._statusCode, payload)
}

func (o *HostnameServiceGetHostnameDefault) GetPayload() *v1.RPCStatus {
	return o.Payload
}

func (o *HostnameServiceGetHostnameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
